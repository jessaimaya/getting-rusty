/**
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

Run: cargo run --example problem_2
Test: cargo test --example problem_2

*/

fn main() {
    println!("Result: {}", sum_even_fib(10_000_000));
}

fn sum_even_fib(max: u32) -> usize {
    let mut a: u32 = 1;
    let mut b: u32 = 2;
    let mut sum: usize = 0;
    while a < max {
        sum = if a & 1 == 0 { sum + a as usize } else { sum };
        let t = a + b;
        a = b;
        b = t;
    }
    sum
}

#[cfg(test)]
mod tests {
    use crate::sum_even_fib;

    #[test]
    fn sum_even_fib_below_10() {
        assert_eq!(10, sum_even_fib(10));
    }
}
